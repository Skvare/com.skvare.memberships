<?php

use CRM_Memberships_ExtensionUtil as E;

/**
 * Form controller class
 *
 * @see https://docs.civicrm.org/dev/en/latest/framework/quickform/
 */
class CRM_Memberships_Form_Registration extends CRM_Contribute_Form_AbstractEditPayment {
  public $_allRelatedContact = [];
  public $_selectedRelatedContact = [];
  public $_membershipTypeContactMapping = [];

  /**
   * Current payment processor including a copy of the object in 'object' key.
   *
   * @var array
   */
  public $_paymentProcessor;

  /**
   * Available recurring processors.
   *
   * @var array
   */
  public $_recurPaymentProcessors = [];

  /**
   * Is this a backoffice form
   *
   * @var bool
   */
  public $isBackOffice = TRUE;


  /**
   * The params submitted by the form and computed by the app
   *
   * @var array
   */
  public $_params = [];

  /**
   * The params submitted by the form and computed by the app
   *
   * @var array
   */
  public $_status = [];

  public function preProcess() {
    $this->_contactID = $this->getLoggedInUserContactID();
    $this->set('cid', $this->_contactID);

    $smarty = CRM_Core_Smarty::singleton();
    $wizard = $smarty->get_template_vars('wizard');
    $wizard['style']['showTitle'] = 0;
    $smarty->assign_by_ref('wizard', $wizard);

    $this->setTitle('Membership Payment');
    parent::preProcess(); // TODO: Change the autogenerated stub
  }

  public function buildQuickForm() {
  }

  public function postProcess() {
    $values = $this->exportValues();
    parent::postProcess();
  }

  protected function addPaymentProcessorSelect($isRequired, $isBuildRecurBlock = FALSE, $isBuildAutoRenewBlock = FALSE) {
    if (!$this->_mode) {
      return;
    }
    $defaults = CRM_Memberships_Helper::getSettingsConfig();

    $processorList = [];
    foreach ($this->_processors as $id => $label) {
      if (in_array($id, array_keys
      ($defaults['memberships_payment_processor']))) {
        $processorList[$id] = $label;
      }
    }
    $js = ($isBuildRecurBlock ? ['onChange' => "buildRecurBlock( this.value ); return false;"] : NULL);
    if ($isBuildAutoRenewBlock) {
      $js = ['onChange' => "buildAutoRenew( null, this.value, '{$this->_mode}');"];
    }
    $element = $this->add('select',
      'payment_processor_id',
      ts('Payment Processor'),
      array_diff_key($processorList, [0 => 1]),
      $isRequired,
      $js
    );
    // The concept of _online is not really explained & the code is old
    // @todo figure out & document.
    if ($this->_online) {
      $element->freeze();
    }
  }
}
